{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n <mat-toolbar color=\"primary\" class=\"mat-elevation-z6 app-navbar \"   >\n  <span><mat-icon style=\"vertical-align: middle;\">calculate</mat-icon>SwingCalculator</span>\n</mat-toolbar>\n\n<div style=\"margin:20px;\">\n\n\n<mat-card >\n  <mat-card-content>\n    <mat-chip-list aria-label=\"Prediction\">\n      <mat-chip [ngStyle]=\"{'background-color': (profit>0) ? '#3CB371' : '#FF0000'}\"selected>Profit : {{profit|number:'1.2-2'}}</mat-chip>\n      <mat-chip  color=\"primary\" selected>Shares : {{getNumberOfShares()}}</mat-chip>\n      <mat-chip >Stock value : {{getExpectedValue()}}</mat-chip>\n      <mat-chip color=\"accent\" selected>Change : {{getStockChanged()}}</mat-chip>\n    </mat-chip-list>\n    <mat-form-field appearance=\"fill\" style=\"margin-top:30px;\">\n      <mat-label>Stock price</mat-label>\n      <input matInput placeholder=\"eg:90.05\"  [(ngModel)]=\"stockPrice\">\n      <button *ngIf=\"stockPrice\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"stockPrice=''\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" style=\"margin-right:10px;\">\n      <mat-label>Money to Invest</mat-label>\n      <input matInput placeholder=\"eg:5000\"  [(ngModel)]=\"investedMoney\">\n      <button *ngIf=\"investedMoney\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"investedMoney=''\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n\n    <mat-form-field  appearance=\"fill\" style=\"margin-right:10px;\">\n      <mat-label>Expected stock price</mat-label >\n      <input matInput placeholder=\"eg:100.51\"  [(ngModel)]=\"stockPriceExpected\">\n      <button *ngIf=\"stockPriceExpected\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"stockPriceExpected=''\">\n       <mat-icon>close</mat-icon>\n    </button>\n    </mat-form-field>\n   <button mat-button color=\"accent\" (click)=\"calculateProfit()\">Calculate</button>\n  </mat-card-content>\n</mat-card>\n\n<footer mat-caption style=\"margin:20px;font-size:14px;\">Â© 2021 <a href=\"https://github.com/rupeshs\" >Rupesh Sreeraman</a> </footer>\n\n</div>","import { Component, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n//ng build --output-path docs --base-href /\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements AfterViewInit {\n  constructor(private cdr: ChangeDetectorRef) {}\n  title = 'swingcalculator';\n  stockPrice: string = '';\n  investedMoney: string = '';\n  stockPriceExpected: string = '';\n  currentStockPrice: number = 0;\n  nShares: number = 0;\n  profit: number = 0;\n  change: number = 0;\n\n  getNumberOfShares(): string {\n    //console.log(this.stockPrice);\n    if (parseFloat(this.stockPrice) && this.investedMoney) {\n      this.nShares =\n        parseFloat(this.investedMoney) / parseFloat(this.stockPrice);\n      return this.nShares.toFixed(1);\n    }\n    return '0';\n  }\n\n  getExpectedValue(): string {\n    if (this.nShares) {\n      this.currentStockPrice =\n        this.nShares * parseFloat(this.stockPriceExpected);\n      //console.log(this.currentStockPrice);\n      return this.currentStockPrice.toFixed(2);\n    }\n    return this.stockPriceExpected;\n  }\n\n  calculateProfit(): string {\n    if (Number.isNaN(parseFloat(this.stockPriceExpected))) return '';\n\n    if (this.nShares && parseFloat(this.stockPriceExpected) > 0) {\n      this.profit = this.currentStockPrice - parseFloat(this.investedMoney);\n      return this.profit.toFixed(2);\n    }\n    return '';\n  }\n\n  getStockChanged(): string {\n    if (this.nShares) {\n      this.change =\n        parseFloat(this.stockPriceExpected) - parseFloat(this.stockPrice);\n      return this.change.toFixed(2);\n    }\n    return '';\n  }\n  ngAfterViewInit() {\n    this.cdr.detectChanges();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatChipsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}